//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré à partir d'un modèle.
//
//     Des modifications manuelles apportées à ce fichier peuvent conduire à un comportement inattendu de votre application.
//     Les modifications manuelles apportées à ce fichier sont remplacées si le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ProGestionGSB.DAL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class GSBMecenatEntities : DbContext
    {
        public GSBMecenatEntities()
            : base("name=GSBMecenatEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Action> Actions { get; set; }
        public virtual DbSet<Association> Associations { get; set; }
        public virtual DbSet<ChoosenCountryYear> ChoosenCountryYears { get; set; }
        public virtual DbSet<Country> Countries { get; set; }
        public virtual DbSet<InterventionsLog> InterventionsLogs { get; set; }
        public virtual DbSet<Mission> Missions { get; set; }
        public virtual DbSet<Partnership> Partnerships { get; set; }
        public virtual DbSet<Role> Roles { get; set; }
        public virtual DbSet<User> Users { get; set; }
    
        public virtual int sp_actions_add(string libel)
        {
            var libelParameter = libel != null ?
                new ObjectParameter("libel", libel) :
                new ObjectParameter("libel", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_actions_add", libelParameter);
        }
    
        public virtual int sp_actions_delete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_actions_delete", idParameter);
        }
    
        public virtual ObjectResult<sp_actions_getAll_Result> sp_actions_getAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_actions_getAll_Result>("sp_actions_getAll");
        }
    
        public virtual ObjectResult<sp_actions_getById_Result> sp_actions_getById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_actions_getById_Result>("sp_actions_getById", idParameter);
        }
    
        public virtual int sp_actions_update(Nullable<int> id, string libel)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var libelParameter = libel != null ?
                new ObjectParameter("libel", libel) :
                new ObjectParameter("libel", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_actions_update", idParameter, libelParameter);
        }
    
        public virtual ObjectResult<string> sp_ActionsByAssociation(Nullable<int> idAssociation)
        {
            var idAssociationParameter = idAssociation.HasValue ?
                new ObjectParameter("idAssociation", idAssociation) :
                new ObjectParameter("idAssociation", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_ActionsByAssociation", idAssociationParameter);
        }
    
        public virtual int sp_associations_add(string name, string responsable, Nullable<int> mission_id, Nullable<int> country_id)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var responsableParameter = responsable != null ?
                new ObjectParameter("responsable", responsable) :
                new ObjectParameter("responsable", typeof(string));
    
            var mission_idParameter = mission_id.HasValue ?
                new ObjectParameter("mission_id", mission_id) :
                new ObjectParameter("mission_id", typeof(int));
    
            var country_idParameter = country_id.HasValue ?
                new ObjectParameter("country_id", country_id) :
                new ObjectParameter("country_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_associations_add", nameParameter, responsableParameter, mission_idParameter, country_idParameter);
        }
    
        public virtual int sp_associations_delete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_associations_delete", idParameter);
        }
    
        public virtual ObjectResult<sp_associations_getAll_Result> sp_associations_getAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_associations_getAll_Result>("sp_associations_getAll");
        }
    
        public virtual ObjectResult<sp_associations_getById_Result> sp_associations_getById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_associations_getById_Result>("sp_associations_getById", idParameter);
        }
    
        public virtual int sp_associations_update(Nullable<int> id, string name, string responsable, Nullable<int> mission_id, Nullable<int> country_id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var responsableParameter = responsable != null ?
                new ObjectParameter("responsable", responsable) :
                new ObjectParameter("responsable", typeof(string));
    
            var mission_idParameter = mission_id.HasValue ?
                new ObjectParameter("mission_id", mission_id) :
                new ObjectParameter("mission_id", typeof(int));
    
            var country_idParameter = country_id.HasValue ?
                new ObjectParameter("country_id", country_id) :
                new ObjectParameter("country_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_associations_update", idParameter, nameParameter, responsableParameter, mission_idParameter, country_idParameter);
        }
    
        public virtual int sp_choosenCountryYears_add(Nullable<int> country_id, Nullable<int> choosenYear)
        {
            var country_idParameter = country_id.HasValue ?
                new ObjectParameter("country_id", country_id) :
                new ObjectParameter("country_id", typeof(int));
    
            var choosenYearParameter = choosenYear.HasValue ?
                new ObjectParameter("choosenYear", choosenYear) :
                new ObjectParameter("choosenYear", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_choosenCountryYears_add", country_idParameter, choosenYearParameter);
        }
    
        public virtual int sp_choosenCountryYears_delete(Nullable<int> country_id, Nullable<int> choosenYear)
        {
            var country_idParameter = country_id.HasValue ?
                new ObjectParameter("country_id", country_id) :
                new ObjectParameter("country_id", typeof(int));
    
            var choosenYearParameter = choosenYear.HasValue ?
                new ObjectParameter("choosenYear", choosenYear) :
                new ObjectParameter("choosenYear", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_choosenCountryYears_delete", country_idParameter, choosenYearParameter);
        }
    
        public virtual ObjectResult<sp_choosenCountryYears_getAll_Result> sp_choosenCountryYears_getAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_choosenCountryYears_getAll_Result>("sp_choosenCountryYears_getAll");
        }
    
        public virtual ObjectResult<sp_choosenCountryYears_getByYear_Result> sp_choosenCountryYears_getByYear(Nullable<int> choosenYear)
        {
            var choosenYearParameter = choosenYear.HasValue ?
                new ObjectParameter("choosenYear", choosenYear) :
                new ObjectParameter("choosenYear", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_choosenCountryYears_getByYear_Result>("sp_choosenCountryYears_getByYear", choosenYearParameter);
        }
    
        public virtual int sp_choosenCountryYears_update(Nullable<int> oldcountry_id, Nullable<int> newcountry_id, Nullable<int> oldChoosenYear, Nullable<int> newChoosenYear, Nullable<double> plafond)
        {
            var oldcountry_idParameter = oldcountry_id.HasValue ?
                new ObjectParameter("oldcountry_id", oldcountry_id) :
                new ObjectParameter("oldcountry_id", typeof(int));
    
            var newcountry_idParameter = newcountry_id.HasValue ?
                new ObjectParameter("newcountry_id", newcountry_id) :
                new ObjectParameter("newcountry_id", typeof(int));
    
            var oldChoosenYearParameter = oldChoosenYear.HasValue ?
                new ObjectParameter("oldChoosenYear", oldChoosenYear) :
                new ObjectParameter("oldChoosenYear", typeof(int));
    
            var newChoosenYearParameter = newChoosenYear.HasValue ?
                new ObjectParameter("newChoosenYear", newChoosenYear) :
                new ObjectParameter("newChoosenYear", typeof(int));
    
            var plafondParameter = plafond.HasValue ?
                new ObjectParameter("plafond", plafond) :
                new ObjectParameter("plafond", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_choosenCountryYears_update", oldcountry_idParameter, newcountry_idParameter, oldChoosenYearParameter, newChoosenYearParameter, plafondParameter);
        }
    
        public virtual int sp_country_add(string name, string isoCode)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var isoCodeParameter = isoCode != null ?
                new ObjectParameter("isoCode", isoCode) :
                new ObjectParameter("isoCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_country_add", nameParameter, isoCodeParameter);
        }
    
        public virtual int sp_country_delete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_country_delete", idParameter);
        }
    
        public virtual ObjectResult<sp_country_getAll_Result> sp_country_getAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_country_getAll_Result>("sp_country_getAll");
        }
    
        public virtual ObjectResult<sp_country_getById_Result> sp_country_getById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_country_getById_Result>("sp_country_getById", idParameter);
        }
    
        public virtual ObjectResult<sp_country_getByIsoCode_Result> sp_country_getByIsoCode(string isoCode)
        {
            var isoCodeParameter = isoCode != null ?
                new ObjectParameter("isoCode", isoCode) :
                new ObjectParameter("isoCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_country_getByIsoCode_Result>("sp_country_getByIsoCode", isoCodeParameter);
        }
    
        public virtual int sp_country_update(Nullable<int> id, string name, string isoCode)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var isoCodeParameter = isoCode != null ?
                new ObjectParameter("isoCode", isoCode) :
                new ObjectParameter("isoCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_country_update", idParameter, nameParameter, isoCodeParameter);
        }
    
        public virtual int sp_interventionLogs_add(string tableName, string operation, Nullable<int> reference)
        {
            var tableNameParameter = tableName != null ?
                new ObjectParameter("tableName", tableName) :
                new ObjectParameter("tableName", typeof(string));
    
            var operationParameter = operation != null ?
                new ObjectParameter("operation", operation) :
                new ObjectParameter("operation", typeof(string));
    
            var referenceParameter = reference.HasValue ?
                new ObjectParameter("reference", reference) :
                new ObjectParameter("reference", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_interventionLogs_add", tableNameParameter, operationParameter, referenceParameter);
        }
    
        public virtual ObjectResult<sp_interventionLogs_getAll_Result> sp_interventionLogs_getAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_interventionLogs_getAll_Result>("sp_interventionLogs_getAll");
        }
    
        public virtual ObjectResult<sp_interventionLogs_getById_Result> sp_interventionLogs_getById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_interventionLogs_getById_Result>("sp_interventionLogs_getById", idParameter);
        }
    
        public virtual ObjectResult<sp_interventionLogs_getByOperation_Result> sp_interventionLogs_getByOperation(string operation)
        {
            var operationParameter = operation != null ?
                new ObjectParameter("operation", operation) :
                new ObjectParameter("operation", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_interventionLogs_getByOperation_Result>("sp_interventionLogs_getByOperation", operationParameter);
        }
    
        public virtual ObjectResult<sp_interventionLogs_getByReference_Result> sp_interventionLogs_getByReference(Nullable<int> reference)
        {
            var referenceParameter = reference.HasValue ?
                new ObjectParameter("reference", reference) :
                new ObjectParameter("reference", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_interventionLogs_getByReference_Result>("sp_interventionLogs_getByReference", referenceParameter);
        }
    
        public virtual ObjectResult<sp_interventionLogs_getByTableName_Result> sp_interventionLogs_getByTableName(string tableName)
        {
            var tableNameParameter = tableName != null ?
                new ObjectParameter("tableName", tableName) :
                new ObjectParameter("tableName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_interventionLogs_getByTableName_Result>("sp_interventionLogs_getByTableName", tableNameParameter);
        }
    
        public virtual int sp_missions_add(string libel)
        {
            var libelParameter = libel != null ?
                new ObjectParameter("libel", libel) :
                new ObjectParameter("libel", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_missions_add", libelParameter);
        }
    
        public virtual int sp_missions_delete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_missions_delete", idParameter);
        }
    
        public virtual ObjectResult<sp_missions_getAll_Result> sp_missions_getAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_missions_getAll_Result>("sp_missions_getAll");
        }
    
        public virtual ObjectResult<sp_missions_getById_Result> sp_missions_getById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_missions_getById_Result>("sp_missions_getById", idParameter);
        }
    
        public virtual int sp_missions_update(Nullable<int> id, string libel)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var libelParameter = libel != null ?
                new ObjectParameter("libel", libel) :
                new ObjectParameter("libel", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_missions_update", idParameter, libelParameter);
        }
    
        public virtual ObjectResult<sp_nbAssociationByCountry_Result> sp_nbAssociationByCountry()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_nbAssociationByCountry_Result>("sp_nbAssociationByCountry");
        }
    
        public virtual ObjectResult<sp_nbPartnershipsByActionByYear_Result> sp_nbPartnershipsByActionByYear()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_nbPartnershipsByActionByYear_Result>("sp_nbPartnershipsByActionByYear");
        }
    
        public virtual int sp_partnerships_add(Nullable<int> action_id, Nullable<int> association_id, Nullable<int> country_id)
        {
            var action_idParameter = action_id.HasValue ?
                new ObjectParameter("action_id", action_id) :
                new ObjectParameter("action_id", typeof(int));
    
            var association_idParameter = association_id.HasValue ?
                new ObjectParameter("association_id", association_id) :
                new ObjectParameter("association_id", typeof(int));
    
            var country_idParameter = country_id.HasValue ?
                new ObjectParameter("country_id", country_id) :
                new ObjectParameter("country_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_partnerships_add", action_idParameter, association_idParameter, country_idParameter);
        }
    
        public virtual int sp_partnerships_delete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_partnerships_delete", idParameter);
        }
    
        public virtual ObjectResult<sp_partnerships_getAll_Result> sp_partnerships_getAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_partnerships_getAll_Result>("sp_partnerships_getAll");
        }
    
        public virtual ObjectResult<sp_partnerships_getByActionId_Result> sp_partnerships_getByActionId(Nullable<int> action_id)
        {
            var action_idParameter = action_id.HasValue ?
                new ObjectParameter("action_id", action_id) :
                new ObjectParameter("action_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_partnerships_getByActionId_Result>("sp_partnerships_getByActionId", action_idParameter);
        }
    
        public virtual ObjectResult<sp_partnerships_getByAssociationId_Result> sp_partnerships_getByAssociationId(Nullable<int> association_id)
        {
            var association_idParameter = association_id.HasValue ?
                new ObjectParameter("association_id", association_id) :
                new ObjectParameter("association_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_partnerships_getByAssociationId_Result>("sp_partnerships_getByAssociationId", association_idParameter);
        }
    
        public virtual ObjectResult<sp_partnerships_getByCountryId_Result> sp_partnerships_getByCountryId(Nullable<int> country_id)
        {
            var country_idParameter = country_id.HasValue ?
                new ObjectParameter("country_id", country_id) :
                new ObjectParameter("country_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_partnerships_getByCountryId_Result>("sp_partnerships_getByCountryId", country_idParameter);
        }
    
        public virtual ObjectResult<sp_partnerships_getById_Result> sp_partnerships_getById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_partnerships_getById_Result>("sp_partnerships_getById", idParameter);
        }
    
        public virtual int sp_partnerships_update(Nullable<int> id, Nullable<int> action_id, Nullable<int> association_id, Nullable<int> country_id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var action_idParameter = action_id.HasValue ?
                new ObjectParameter("action_id", action_id) :
                new ObjectParameter("action_id", typeof(int));
    
            var association_idParameter = association_id.HasValue ?
                new ObjectParameter("association_id", association_id) :
                new ObjectParameter("association_id", typeof(int));
    
            var country_idParameter = country_id.HasValue ?
                new ObjectParameter("country_id", country_id) :
                new ObjectParameter("country_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_partnerships_update", idParameter, action_idParameter, association_idParameter, country_idParameter);
        }
    
        public virtual int sp_partnerships_updateForecastBudget(Nullable<int> id, Nullable<double> forecastBudget)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var forecastBudgetParameter = forecastBudget.HasValue ?
                new ObjectParameter("forecastBudget", forecastBudget) :
                new ObjectParameter("forecastBudget", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_partnerships_updateForecastBudget", idParameter, forecastBudgetParameter);
        }
    
        public virtual int sp_partnerships_updatePlafond(Nullable<int> id, Nullable<double> plafond)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var plafondParameter = plafond.HasValue ?
                new ObjectParameter("plafond", plafond) :
                new ObjectParameter("plafond", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_partnerships_updatePlafond", idParameter, plafondParameter);
        }
    
        public virtual int sp_partnerships_updateRealBudget(Nullable<int> id, Nullable<double> realBudget)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var realBudgetParameter = realBudget.HasValue ?
                new ObjectParameter("realBudget", realBudget) :
                new ObjectParameter("realBudget", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_partnerships_updateRealBudget", idParameter, realBudgetParameter);
        }
    
        public virtual int sp_role_add(string libel)
        {
            var libelParameter = libel != null ?
                new ObjectParameter("libel", libel) :
                new ObjectParameter("libel", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_role_add", libelParameter);
        }
    
        public virtual int sp_role_delete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_role_delete", idParameter);
        }
    
        public virtual ObjectResult<sp_role_getAll_Result> sp_role_getAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_role_getAll_Result>("sp_role_getAll");
        }
    
        public virtual ObjectResult<sp_role_getById_Result> sp_role_getById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_role_getById_Result>("sp_role_getById", idParameter);
        }
    
        public virtual int sp_role_update(Nullable<int> id, string libel)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var libelParameter = libel != null ?
                new ObjectParameter("libel", libel) :
                new ObjectParameter("libel", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_role_update", idParameter, libelParameter);
        }
    
        public virtual int sp_users_add(string login, string password, Nullable<int> role_id)
        {
            var loginParameter = login != null ?
                new ObjectParameter("login", login) :
                new ObjectParameter("login", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            var role_idParameter = role_id.HasValue ?
                new ObjectParameter("role_id", role_id) :
                new ObjectParameter("role_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_users_add", loginParameter, passwordParameter, role_idParameter);
        }
    
        public virtual int sp_users_delete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_users_delete", idParameter);
        }
    
        public virtual ObjectResult<sp_users_getAll_Result> sp_users_getAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_users_getAll_Result>("sp_users_getAll");
        }
    
        public virtual ObjectResult<sp_users_getById_Result> sp_users_getById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_users_getById_Result>("sp_users_getById", idParameter);
        }
    
        public virtual ObjectResult<sp_users_getByLogin_Result> sp_users_getByLogin(string login)
        {
            var loginParameter = login != null ?
                new ObjectParameter("login", login) :
                new ObjectParameter("login", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_users_getByLogin_Result>("sp_users_getByLogin", loginParameter);
        }
    
        public virtual int sp_users_update(Nullable<int> id, string login, string password, Nullable<int> role_id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var loginParameter = login != null ?
                new ObjectParameter("login", login) :
                new ObjectParameter("login", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            var role_idParameter = role_id.HasValue ?
                new ObjectParameter("role_id", role_id) :
                new ObjectParameter("role_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_users_update", idParameter, loginParameter, passwordParameter, role_idParameter);
        }
    
        public virtual ObjectResult<sp_users_getByLogin1_Result> sp_users_getByLogin1(string login)
        {
            var loginParameter = login != null ?
                new ObjectParameter("login", login) :
                new ObjectParameter("login", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_users_getByLogin1_Result>("sp_users_getByLogin1", loginParameter);
        }
    }
}
